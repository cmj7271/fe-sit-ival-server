plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id("com.diffplug.spotless") version "7.0.1"
}

group = 'com.hongik'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '**/*.gradle', '**/*.md'
		trimTrailingWhitespace()
		leadingSpacesToTabs()
		endWithNewline()
	}
	java {
		removeUnusedImports()
		palantirJavaFormat()
		formatAnnotations()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.register("updateGitHooks", Copy) {
	from "./scripts/pre-commit"
	into ".git/hooks"
	onlyIf {
		System.getenv("NO_GIT_HOOKS") == "true"
	}
}
tasks.register("executableGitHooks", Exec) {
	commandLine "chmod", "ug+x", ".git/hooks/pre-commit"
	dependsOn(updateGitHooks)
	onlyIf {
		System.getenv("NO_GIT_HOOKS") == "true"
	}
}
compileJava.dependsOn(executableGitHooks)